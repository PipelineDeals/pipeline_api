# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
defaults: &defaults
  parallelism: 1
  docker:
      - image: cimg/ruby:3.2.0
        environment:
          RAILS_ENV: test

version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  rspec:
    <<: *defaults
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    working_directory: ~/pipeline_api
    steps:
      - checkout

      - run:
          name: bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: Rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              -- $TEST_FILES

      - store_test_results:
          path: test_results

      - store_artifacts:
          path: test-results/rspec.xml
          destination: test-results

      - store_artifacts:
          path: coverage
          destination: coverage

  rubocop:
    <<: *defaults
    resource_class: small
    working_directory: ~/pipeline_api

    steps:
      - checkout
      - run:
          name: Gem install rubocop
          command: bundle install --with ci --without default development test
      - run: chmod 755 ./script/dirty_cop
      - run:
          name: Rubocop (Changes vs master)
          command: ./script/dirty_cop --circleci
          # https://discuss.circleci.com/t/checkout-script-adds-commits-to-master-from-circle-branch/14194

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - rspec
      - rubocop
